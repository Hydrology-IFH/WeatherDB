[database]
; These are the main database settings
; The database is created with the cli command create-db-schema or the weatherDB.Broker().create_db_schema() method
; you can define multiple database connections by adding a new section like [database.connection_name], where you can define your connection name
; The connection setting defines which connection is used if not specified
connection = main

[database:main]
; setup a database connection
; The password should not be stored in the config file, as it is a security risk.
; the module will ask for the password on first execution and store it in the keyring.
HOST = localhost
PORT = 5432
DATABASE = weatherdb
USER = wetherdb_user

[database:owner]
; You can setup multiple database connections
HOST = localhost
PORT = 5432
DATABASE = weatherdb
USER = weatherdb_owner

[logging]
; The logging settings
; Should the log be written to a file or to the console
; Possible values: file, console
HANDLERS =

; The log level
; Possible values: DEBUG, INFO, WARNING, ERROR, CRITICAL
LEVEL = DEBUG

; The log directory
; The path can contain the module path as basis with ${main:module_path} or the complete path.
; if the log should be written to the console, this setting is ignored
DIRECTORY = ${main:module_path}/logs

; The log file template
; The log file will be named with the template and rotated daily with the date appended
; The template can contain the computer host name with {host} ant the current user name with {user}
FILE = weatherDB_{host}_{user}.log

; The log file format
; The format can contain the following variables:
; {asctime} - the time of the log entry
; {name} - the name of the logger
; {levelname} - the log level
; {message} - the log message
FORMAT = %(asctime)s - %(name)s - %(levelname)s - %(message)s

[data]
; The weatherDB module needs several data files to work properly.
; those files are only used by the main managing module, not by the users.

; The data files like multi annual and dems rasters are normaly stored in the data directory.
; The path can contain the module path as basis with ${main:module_path} or the complete path.
; if they are stored somewhere else set the path here
BASE_DIR = ${main:module_path}/data

[data:rasters]
; Digital elevation models (DEM)
; The paths can contain the module path as basis with ${main:module_path} or the DATA.BASE_DIR with ${data:BASE_DIR} or the complete path.
; The module needs at least one DEM to calculate the horizon shadowing angle.
; as finer DEM are sometimes not covering the whole area of germany+40km, that is needed, you can add additional DEMs, that gets used if the first one
; the DEMs are used in the order of appearance in the list
DEMS = ${data:BASE_DIR}/dgms/DGM25.tif,
       ${data:BASE_DIR}/dgms/DGM80.tif

; Regionalisation Rasters
; the module works with regionalised multi-annual rasters from the DWD
; the module needs at least the HYRAS and DWD raster, as this is the basis for the regionalisation of the station data
; The rasters should be in a cartesian coordinate system with meter as unit to be able to calculate distances (e.g. EPSG:3035)

[data:rasters:hyras]
; multi annual HYRAS raster
; The original data can be found on: https://opendata.dwd.de/climate_environment/CDC/grids_germany/multi_annual/hyras_de/precipitation/
; to get better results, we refined the 1km rasters to 25m raster, based on a DEM25. (this file is not providen, but can be asked for)
FILE = ${data:BASE_DIR}/regionalisation/HYRAS_ma_1991_2020_DGM25.tif

; This raster file should have at least 3 raster bands for summer, winter and yearly means.
; Give the rasters names or band numbers
BAND_P_WIHJ = n_hyras_wihj
BAND_P_SOHJ = n_hyras_sohj
BAND_P_YEAR = n_hyras_year

; The EPSG code of the rasters
SRID = 3035

; the datatype of the raster
DTYPE = int

[data:rasters:dwd]
; multi annual DWD raster
FILE = ${data:BASE_DIR}/regionalisation/DWD-grid_ma_1991_2020_DGM25.tif
BAND_P_WIHJ = n_dwd_wihj
BAND_P_SOHJ = n_dwd_sohj
BAND_P_YEAR = n_dwd_year
BAND_T_YEAR = t_dwd_year
BAND_ET_YEAR = et_dwd_year

; The EPSG code of the rasters
SRID = 3035


; for developpers:
; ----------------
;
; [database:alembic]
; the database connection used by the alambic scripts